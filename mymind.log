 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
Error fetching Wikipedia data for title 'Currency symbol': 403 Client Error: Forbidden for url: https://en.wikipedia.org/api/rest_v1/page/summary/Currency%20symbol
Error fetching Wikipedia data for title 'Currency symbol': 403 Client Error: Forbidden for url: https://en.wikipedia.org/api/rest_v1/page/summary/Currency%20symbol
Error fetching Wikipedia data for title 'Currency symbol': 403 Client Error: Forbidden for url: https://en.wikipedia.org/api/rest_v1/page/summary/Currency%20symbol
Error fetching Wikipedia data for title 'Currency symbol': 403 Client Error: Forbidden for url: https://en.wikipedia.org/api/rest_v1/page/summary/Currency%20symbol
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
Error calling Gemini API: 504 Deadline Exceeded
Error calling Gemini API: 504 Deadline Exceeded
 * Serving Flask app 'app'
 * Debug mode: on
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 17
}
]
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 7
}
]
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 8
}
]
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 8
}
]
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 59
}
]
 * Serving Flask app 'app'
 * Debug mode: on
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 42
}
]
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 31
}
]
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 1
}
]
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 42
}
]
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 31
}
]
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 18
}
]
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 59
}
]
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 42
}
]
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 175, in chat_with_mymind
    response = model.generate_content(prompt, stream=True)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 240, in generate_content
    iterator = self._client.stream_generate_content(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 852, in stream_generate_content
    response = rpc(
               ^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/timeout.py", line 120, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 42
}
]

Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 51
}
]
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 175, in chat_with_mymind
    response = model.generate_content(prompt, stream=True)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 240, in generate_content
    iterator = self._client.stream_generate_content(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 852, in stream_generate_content
    response = rpc(
               ^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/timeout.py", line 120, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 51
}
]

Error calling Gemini API: 504 Deadline Exceeded
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 175, in chat_with_mymind
    response = model.generate_content(prompt, stream=True)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 240, in generate_content
    iterator = self._client.stream_generate_content(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 852, in stream_generate_content
    response = rpc(
               ^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/timeout.py", line 120, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.DeadlineExceeded: 504 Deadline Exceeded

Error calling Gemini API: 504 Deadline Exceeded
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 175, in chat_with_mymind
    response = model.generate_content(prompt, stream=True)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 240, in generate_content
    iterator = self._client.stream_generate_content(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 852, in stream_generate_content
    response = rpc(
               ^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/timeout.py", line 120, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.DeadlineExceeded: 504 Deadline Exceeded

Error calling Gemini API: 504 Deadline Exceeded
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 175, in chat_with_mymind
    response = model.generate_content(prompt, stream=True)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 240, in generate_content
    iterator = self._client.stream_generate_content(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 852, in stream_generate_content
    response = rpc(
               ^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/timeout.py", line 120, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.DeadlineExceeded: 504 Deadline Exceeded

Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 58
}
]
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 175, in chat_with_mymind
    response = model.generate_content(prompt, stream=True)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 240, in generate_content
    iterator = self._client.stream_generate_content(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 852, in stream_generate_content
    response = rpc(
               ^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/timeout.py", line 120, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 58
}
]

 * Serving Flask app 'app'
 * Debug mode: on
Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 38
}
]
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 309, in chat_with_mymind
    response = model.generate_content(prompt, stream=True)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 240, in generate_content
    iterator = self._client.stream_generate_content(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 852, in stream_generate_content
    response = rpc(
               ^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/timeout.py", line 120, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 38
}
]

Error calling Gemini API: 503 The model is overloaded. Please try again later.
Full traceback: Traceback (most recent call last):
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 116, in __next__
    return next(self._wrapped)
           ^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/grpc/_channel.py", line 952, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "The model is overloaded. Please try again later."
	debug_error_string = "UNKNOWN:Error received from peer ipv4:216.58.209.74:443 {grpc_message:"The model is overloaded. Please try again later.", grpc_status:14}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 310, in chat_with_mymind
    for chunk in response:
                 ^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/types/generation_types.py", line 406, in __iter__
    raise self._error
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/types/generation_types.py", line 415, in __iter__
    item = next(self._iterator)
           ^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 119, in __next__
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 The model is overloaded. Please try again later.

Error calling Gemini API: 503 The model is overloaded. Please try again later.
Full traceback: Traceback (most recent call last):
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 116, in __next__
    return next(self._wrapped)
           ^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/grpc/_channel.py", line 543, in __next__
    return self._next()
           ^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/grpc/_channel.py", line 969, in _next
    raise self
grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:
	status = StatusCode.UNAVAILABLE
	details = "The model is overloaded. Please try again later."
	debug_error_string = "UNKNOWN:Error received from peer ipv4:216.58.209.74:443 {grpc_status:14, grpc_message:"The model is overloaded. Please try again later."}"
>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 310, in chat_with_mymind
    for chunk in response:
                 ^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/types/generation_types.py", line 406, in __iter__
    raise self._error
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/types/generation_types.py", line 415, in __iter__
    item = next(self._iterator)
           ^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 119, in __next__
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.ServiceUnavailable: 503 The model is overloaded. Please try again later.

Error calling Gemini API: 504 Deadline Exceeded
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 309, in chat_with_mymind
    response = model.generate_content(prompt, stream=True)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/generativeai/generative_models.py", line 240, in generate_content
    iterator = self._client.stream_generate_content(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 852, in stream_generate_content
    response = rpc(
               ^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 293, in retry_wrapped_func
    return retry_target(
           ^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 153, in retry_target
    _retry_error_helper(
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/retry/retry_unary.py", line 144, in retry_target
    result = target()
             ^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/timeout.py", line 120, in func_with_timeout
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/google/api_core/grpc_helpers.py", line 174, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.DeadlineExceeded: 504 Deadline Exceeded

 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
 * Serving Flask app 'app'
 * Debug mode: on
DEBUG - OpenRouter API key loaded: Yes
DEBUG - Client base_url: https://openrouter.ai/api/v1/
DEBUG - OpenRouter API key loaded: Yes
DEBUG - Client base_url: https://openrouter.ai/api/v1/
DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'what i clipped today?'
DEBUG - Intent: {'type': 'search', 'temporal_query': True, 'search_terms': ['what', 'i', 'clipped', 'today?'], 'date_filter': {'type': 'today'}}
DEBUG - Date filter: {'type': 'today'}
DEBUG - Found 2 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'show me my recent movies'
DEBUG - Intent: {'type': 'search', 'temporal_query': True, 'search_terms': ['show', 'me', 'my', 'recent', 'movies'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'what's my last reddit notes'
DEBUG - Intent: {'type': 'search', 'temporal_query': True, 'search_terms': ["what's", 'my', 'last', 'reddit', 'notes'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - OpenRouter API key loaded: Yes
DEBUG - Client base_url: https://openrouter.ai/api/v1/
DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'Show me my recent movies'
DEBUG - Intent: {'type': 'search', 'temporal_query': True, 'search_terms': ['Show', 'me', 'my', 'recent', 'movies'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'what i clipped today?'
DEBUG - Intent: {'type': 'search', 'temporal_query': True, 'search_terms': ['what', 'i', 'clipped', 'today?'], 'date_filter': {'type': 'today'}}
DEBUG - Date filter: {'type': 'today'}
DEBUG - Found 2 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'how are you?'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['how', 'are', 'you?'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'what i clipped today?'
DEBUG - Intent: {'type': 'search', 'temporal_query': True, 'search_terms': ['what', 'i', 'clipped', 'today?'], 'date_filter': {'type': 'today'}}
DEBUG - Date filter: {'type': 'today'}
DEBUG - Found 2 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Starting chat generation for question: 'what i clipped yesterday?'
DEBUG - Intent: {'type': 'search', 'temporal_query': True, 'search_terms': ['what', 'i', 'clipped', 'yesterday?'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'what i clippeed last week?'
DEBUG - Intent: {'type': 'search', 'temporal_query': True, 'search_terms': ['what', 'i', 'clippeed', 'last', 'week?'], 'date_filter': None}
DEBUG - Date filter: None
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - Error in chat endpoint: 'NoneType' object has no attribute 'get'
DEBUG - Full traceback:
Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/app.py", line 710, in generate_response
    for chunk in chat_with_mymind(question, context_notes if context_notes else None, allNotes):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 324, in chat_with_mymind
    prompt = create_search_prompt(question, context, user_profile, temporal_context, intent)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 411, in create_search_prompt
    date_filter_type = intent.get('date_filter', {}).get('type')
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'

DEBUG - Starting chat generation for question: 'what i clipped today?'
DEBUG - Intent: {'type': 'search', 'temporal_query': True, 'search_terms': ['what', 'i', 'clipped', 'today?'], 'date_filter': {'type': 'today'}}
DEBUG - Date filter: {'type': 'today'}
DEBUG - Found 2 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - OpenRouter API key loaded: Yes
DEBUG - Client base_url: https://openrouter.ai/api/v1/
DEBUG - OpenRouter API key loaded: Yes
DEBUG - Client base_url: https://openrouter.ai/api/v1/
DEBUG - OpenRouter API key loaded: Yes
DEBUG - Client base_url: https://openrouter.ai/api/v1/
DEBUG - OpenRouter API key loaded: Yes
DEBUG - Client base_url: https://openrouter.ai/api/v1/
DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': {}}
DEBUG - Date filter: {}
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
DEBUG - OpenRouter API key loaded: Yes
DEBUG - Client base_url: https://openrouter.ai/api/v1/
DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': {}}
DEBUG - Date filter: {}
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
Error calling OpenRouter API: Error code: 402 - {'error': {'message': 'This request requires more credits, or fewer max_tokens. You requested up to 4096 tokens, but can only afford 4091. To increase, visit https://openrouter.ai/settings/credits and upgrade to a paid account', 'code': 402, 'metadata': {'provider_name': None}}, 'user_id': 'user_2sSDBDa3ZwHiDXBgS1YMjCGaxcD'}
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 370, in chat_with_mymind
    stream = client.chat.completions.create(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_utils/_utils.py", line 279, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/resources/chat/completions.py", line 859, in create
    return self._post(
           ^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 1283, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 960, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 1064, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.APIStatusError: Error code: 402 - {'error': {'message': 'This request requires more credits, or fewer max_tokens. You requested up to 4096 tokens, but can only afford 4091. To increase, visit https://openrouter.ai/settings/credits and upgrade to a paid account', 'code': 402, 'metadata': {'provider_name': None}}, 'user_id': 'user_2sSDBDa3ZwHiDXBgS1YMjCGaxcD'}

DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': {}}
DEBUG - Date filter: {}
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
Error calling OpenRouter API: Error code: 402 - {'error': {'message': 'This request requires more credits, or fewer max_tokens. You requested up to 4096 tokens, but can only afford 4091. To increase, visit https://openrouter.ai/settings/credits and upgrade to a paid account', 'code': 402, 'metadata': {'provider_name': None}}, 'user_id': 'user_2sSDBDa3ZwHiDXBgS1YMjCGaxcD'}
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 370, in chat_with_mymind
    stream = client.chat.completions.create(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_utils/_utils.py", line 279, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/resources/chat/completions.py", line 859, in create
    return self._post(
           ^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 1283, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 960, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 1064, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.APIStatusError: Error code: 402 - {'error': {'message': 'This request requires more credits, or fewer max_tokens. You requested up to 4096 tokens, but can only afford 4091. To increase, visit https://openrouter.ai/settings/credits and upgrade to a paid account', 'code': 402, 'metadata': {'provider_name': None}}, 'user_id': 'user_2sSDBDa3ZwHiDXBgS1YMjCGaxcD'}

DEBUG - Starting chat generation for question: 'hi'
DEBUG - Intent: {'type': 'chat', 'temporal_query': False, 'search_terms': ['hi'], 'date_filter': {}}
DEBUG - Date filter: {}
DEBUG - Found 8 relevant notes
DEBUG - Calling chat_with_mymind
Error calling OpenRouter API: Error code: 402 - {'error': {'message': 'This request requires more credits, or fewer max_tokens. You requested up to 4096 tokens, but can only afford 4091. To increase, visit https://openrouter.ai/settings/credits and upgrade to a paid account', 'code': 402, 'metadata': {'provider_name': None}}, 'user_id': 'user_2sSDBDa3ZwHiDXBgS1YMjCGaxcD'}
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 370, in chat_with_mymind
    stream = client.chat.completions.create(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_utils/_utils.py", line 279, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/resources/chat/completions.py", line 859, in create
    return self._post(
           ^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 1283, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 960, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 1064, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.APIStatusError: Error code: 402 - {'error': {'message': 'This request requires more credits, or fewer max_tokens. You requested up to 4096 tokens, but can only afford 4091. To increase, visit https://openrouter.ai/settings/credits and upgrade to a paid account', 'code': 402, 'metadata': {'provider_name': None}}, 'user_id': 'user_2sSDBDa3ZwHiDXBgS1YMjCGaxcD'}

DEBUG - Starting chat generation for question: 'what i clipped today?'
DEBUG - Intent: {'type': 'search', 'temporal_query': True, 'search_terms': ['what', 'i', 'clipped', 'today?'], 'date_filter': {'type': 'today'}}
DEBUG - Date filter: {'type': 'today'}
DEBUG - Found 2 relevant notes
DEBUG - Calling chat_with_mymind
Error calling OpenRouter API: Error code: 402 - {'error': {'message': 'This request requires more credits, or fewer max_tokens. You requested up to 4096 tokens, but can only afford 4091. To increase, visit https://openrouter.ai/settings/credits and upgrade to a paid account', 'code': 402, 'metadata': {'provider_name': None}}, 'user_id': 'user_2sSDBDa3ZwHiDXBgS1YMjCGaxcD'}
Full traceback: Traceback (most recent call last):
  File "/Users/moumanet-taibi/Desktop/mymind/api.py", line 370, in chat_with_mymind
    stream = client.chat.completions.create(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_utils/_utils.py", line 279, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/resources/chat/completions.py", line 859, in create
    return self._post(
           ^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 1283, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 960, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/openai/_base_client.py", line 1064, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.APIStatusError: Error code: 402 - {'error': {'message': 'This request requires more credits, or fewer max_tokens. You requested up to 4096 tokens, but can only afford 4091. To increase, visit https://openrouter.ai/settings/credits and upgrade to a paid account', 'code': 402, 'metadata': {'provider_name': None}}, 'user_id': 'user_2sSDBDa3ZwHiDXBgS1YMjCGaxcD'}

